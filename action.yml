name: 'Sticky Comment'
description: 'Post sticky comments to GitHub PRs and Issues using github-comment CLI'
author: 'haya14busa'
branding:
  icon: 'message-square'
  color: 'blue'

inputs:
  key:
    description: 'Unique key for the sticky comment (used for updating)'
    required: true
  body:
    description: 'Comment body content'
    required: true
  number:
    description: 'PR or Issue number. If not provided, will be auto-detected from the context'
    required: false
    default: ''
  token:
    description: 'GitHub token'
    required: false
    default: ${{ github.token }}
  skip-no-token:
    description: 'Works like dry-run if the GitHub Access Token is not set (instead of failing)'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Post sticky comment
      shell: bash
      env:
        COMMENT_KEY: ${{ inputs.key }}
        COMMENT_BODY: ${{ inputs.body }}
        COMMENT_NUMBER: ${{ inputs.number }}
        SKIP_NO_TOKEN: ${{ inputs.skip-no-token }}
        ACTION_PATH: ${{ github.action_path }}
        INPUT_TOKEN: ${{ inputs.token }}
      run: |
        set -euo pipefail
        set -x  # Show executed commands for debugging

        # Only set GITHUB_TOKEN if a token was provided and is not empty
        if [ -n "${INPUT_TOKEN}" ]; then
          export GITHUB_TOKEN="${INPUT_TOKEN}"
        fi

        # Create temp file for comment body
        TMPFILE=$(mktemp)

        # Ensure cleanup on exit
        trap 'rm -f "${TMPFILE}"' EXIT

        # Write comment body to temp file
        echo "${COMMENT_BODY}" > "${TMPFILE}"

        # Build command arguments
        ARGS=(
          post
          --pr "${COMMENT_NUMBER:-0}"
          -k "${COMMENT_KEY}"
          --update-condition "Comment.HasMeta && Comment.Meta.TemplateKey == \"${COMMENT_KEY}\""
          --var-file "content:${TMPFILE}"
          --template '{{.Vars.content | AvoidHTMLEscape}}'
        )

        # Add skip-no-token flag if enabled
        if [ "${SKIP_NO_TOKEN}" = "true" ]; then
          ARGS+=(--skip-no-token)
        fi

        # Run github-comment
        "${ACTION_PATH}/run-github-comment.sh" -- "${ARGS[@]}"
